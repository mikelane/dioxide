[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "dioxide"
version = "0.1.0"
description = "Fast, Rust-backed declarative dependency injection for Python"
authors = [
    {name = "Mike Lane", email = "mikelane@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
keywords = ["dependency-injection", "di", "ioc", "rust", "container"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Rust",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-cov>=4.1",
    "behave>=1.2.6",
    "mypy>=1.8",
    "ruff>=0.1",
    "isort>=5.13",
    "tox>=4.0",
    "pre-commit>=3.0",
    "mutmut>=2.4",
]

[project.urls]
Homepage = "https://github.com/mikelane/dioxide"
Repository = "https://github.com/mikelane/dioxide"
Issues = "https://github.com/mikelane/dioxide/issues"

[tool.maturin]
python-source = "python"
module-name = "dioxide._dioxide_core"
features = ["pyo3/extension-module"]

[tool.setuptools]
package-dir = {"" = "python"}

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Describe*", "Test*"]
python_functions = ["it_*", "test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
]

[tool.mypy]
python_version = "3.11"
mypy_path = "python"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = true
disallow_subclassing_any = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
strict_concatenate = true
exclude = ["features/"]

[[tool.mypy.overrides]]
module = ["behave", "behave.*", "dioxide._dioxide_core"]
ignore_missing_imports = true

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "RUF", # Ruff-specific rules
]
ignore = [
    "COM812",  # Ignore missing trailing commas (conflicts with ruff format)
    "ISC001",  # Ignore implicitly concatenated strings (conflicts with ruff format)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101"]  # Allow assert in tests

[tool.ruff.lint.isort]
known-first-party = ["dioxide"]

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true
skip-magic-trailing-comma = false

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3  # Vertical Hanging Indent
include_trailing_comma = true
force_grid_wrap = 0  # Disable forced grid wrap - use only when needed
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["dioxide"]
# Single imports should be on one line: from module import Item
# Multiple imports use hanging indent with parentheses

[tool.coverage.run]
branch = true
source = ["dioxide"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.mutmut]
paths_to_mutate = "python/dioxide/"
backup = false
runner = "python -m pytest -x --assert=plain"
tests_dir = "tests/"

[dependency-groups]
dev = [
    "twine>=6.2.0",
]
